@model Speakster.Models.RegisterViewModel
@{
    ViewBag.Title = "Conta Speakster";
}


@{
    //
    //Precisa ser inicializado com 1 porque não existe 0 em
    //nenhuma das tabelas de idioma, speaking level e talking level
    //
    int LanguageID = 1;
    string esconderLanguageID = String.Empty;

    if (!String.IsNullOrEmpty(ViewBag.LanguageID))
    {
        LanguageID = Int32.Parse(ViewBag.LanguageID.ToString());
        esconderLanguageID = "display:none;";
    }

    int SpeakingLevelID = 1;
    string esconderSpeakingLevelID = String.Empty;

    if (!String.IsNullOrEmpty(ViewBag.SpeakingLevelID))
    {
        SpeakingLevelID = Int32.Parse(ViewBag.SpeakingLevelID.ToString());
        esconderSpeakingLevelID = "display:none;";
    }


    int ListeningLevelID = 1;
    string esconderListeningLevelID = String.Empty;

    if (!String.IsNullOrEmpty(ViewBag.ListeningLevelID))
    {
        ListeningLevelID = Int32.Parse(ViewBag.ListeningLevelID.ToString());
        esconderListeningLevelID = "display:none;";
    }

    bool isTeacher = false;
    if (!String.IsNullOrEmpty(ViewBag.isTeacher))
    {
        isTeacher = true;
    }

}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Através da sua conta você terá diversas ferramentas que o ajudarão a acompanhar seu progresso!</h4>
    <p>Temos até mesmo um chat em tempo real.</p>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.First_name, new { @class = "form-control", @placeholder = "Nome" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Last_name, new { @class = "form-control", @placeholder = "Sobrenome" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email" })
        </div>
    </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Insira sua senha" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "Por favor repita a senha" })
            </div>
        </div>


        @Html.HiddenFor(m => m.Language_id, new { @Value = LanguageID });
    <div class="form-group" style="@esconderLanguageID">
        @Html.LabelFor(model => model.Language_id, "Language_id", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Language_id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Language_id, "", new { @class = "text-danger" })
        </div>
    </div>


    @Html.HiddenFor(m => m.SpeakingLevel_id, new { @Value = SpeakingLevelID });
    <div class="form-group" style="@esconderSpeakingLevelID">
        @Html.LabelFor(model => model.SpeakingLevel_id, "SpeakingLevel_id", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("SpeakingLevel_id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SpeakingLevel_id, "", new { @class = "text-danger" })
        </div>
    </div>


    @Html.HiddenFor(m => m.ListeningLevel_id, new { @Value = ListeningLevelID });
    <div class="form-group" style="@esconderListeningLevelID">
        @Html.LabelFor(model => model.ListeningLevel_id, "ListeningLevel_id", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ListeningLevel_id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ListeningLevel_id, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" class="btn btn-default" value="Criar Conta!" />
            </div>
        </div>

        @Html.HiddenFor(m => m.isTeacher, new { @Value = isTeacher });

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
